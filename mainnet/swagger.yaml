swagger: '2.0'
info:
  title: Neblio REST API Suite
  description: APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
  version: 1.0.0
host: 'ntp1node.nebl.io'
schemes:
  - https
basePath: /
produces:
  - application/json
paths:
  /ntp1/tokenid/{tokensymbol}:
    get:
      summary: Returns the tokenId representing a token
      description: |
        Translates a token symbol to a tokenId if a token exists with that symbol on the network
      operationId: getTokenId
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: tokensymbol
          in: path
          description: Token symbol
          required: true
          type: string
      tags:
        - NTP1
      responses:
        '200':
          description: Object containing the token symbol and ID, if token symbol does not exist on network, empty object is returned.
          schema:
            $ref: '#/definitions/getTokenIdResponse'



  /ntp1/broadcast:
    post:
      summary: Broadcasts a signed raw transaction to the network
      description: |
        Broadcasts a signed raw transaction to the network. If successful returns the txid of the broadcast trasnaction.
      operationId: broadcastTx
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: Object representing a transaction to broadcast
          required: true
          schema:
            $ref: '#/definitions/broadcastTxRequest'
      tags:
        - NTP1
      responses:
        '200':
          description: An object containing the TXID if the broadcast was successful
          schema:
            $ref: '#/definitions/broadcastTxResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'



  /ntp1/addressinfo/{address}:
    get:
      summary: Information On a Neblio Address
      description: |
        Returns both NEBL and NTP1 token UTXOs held at the given address.
      operationId: getAddressInfo
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: address
          in: path
          description: Neblio Address to get information on.
          required: true
          type: string
      tags:
        - NTP1
      responses:
        '200':
          description: An object with an array of UTXOs for this address
          schema:
            $ref: '#/definitions/getAddressInfoResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'



  /ntp1/tokenmetadata/{tokenid}:
    get:
      summary: Get Issuance Metadata of Token
      description: |
        Returns the metadata associated with a token at time of issuance.
      operationId: getTokenMetadataOfIssuance
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: tokenid
          in: path
          description: TokenId to request metadata for
          required: true
          type: string
      tags:
        - NTP1
      responses:
        '200':
          description: An object containing the metadata of a token at issuance
          schema:
            $ref: '#/definitions/getTokenMetadataResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'



  /ntp1/tokenmetadata/{tokenid}/{utxo}:
    get:
      summary: Get UTXO Metadata of Token
      description: |
        Returns the metadata associated with a token for that specific utxo instead of the issuance transaction.
      operationId: getTokenMetadataOfUtxo
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: tokenid
          in: path
          description: TokenId to request metadata for
          required: true
          type: string
        - name: utxo
          in: path
          description: Specific UTXO to request metadata for
          required: true
          type: string
      tags:
        - NTP1
      responses:
        '200':
          description: An object containing the metadata of a token for a UTXO
          schema:
            $ref: '#/definitions/getTokenMetadataResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'



  /ntp1/stakeholders/{tokenid}:
    get:
      summary: Get Addresses Holding a Token
      description: |
        Returns the the the addresses holding a token and how many tokens are held
      operationId: getTokenHolders
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: tokenid
          in: path
          description: TokenId to request metadata for
          required: true
          type: string
      tags:
        - NTP1
      responses:
        '200':
          description: An object containing all of the addresses holding a token
          schema:
            $ref: '#/definitions/getTokenHoldersResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'



  /ntp1/issue:
    post:
      summary: Builds a transaction that issues a new NTP1 Token
      description: |
        Builds an unsigned raw transaction that issues a new NTP1 token on the Neblio blockchain.
      operationId: issueToken
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: Object representing the token to be created
          required: true
          schema:
            $ref: '#/definitions/issueTokenRequest'
      tags:
        - NTP1
      responses:
        '200':
          description: An object representing the token created
          schema:
            $ref: '#/definitions/issueTokenResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'



  /ntp1/sendtoken:
    post:
      summary: Builds a transaction that sends an NTP1 Token
      description: |
        Builds an unsigned raw transaction that sends an NTP1 token on the Neblio blockchain.
      operationId: sendToken
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: Object representing the token to be sent
          required: true
          schema:
            $ref: '#/definitions/sendTokenRequest'
      tags:
        - NTP1
      responses:
        '200':
          description: An object representing the tx to send the token
          schema:
            $ref: '#/definitions/sendTokenResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'



  /ntp1/burntoken:
    post:
      summary: Builds a transaction that burns an NTP1 Token
      description: |
        Builds an unsigned raw transaction that burns an NTP1 token on the Neblio blockchain.
      operationId: burnToken
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: Object representing the token to be burned
          required: true
          schema:
            $ref: '#/definitions/burnTokenRequest'
      tags:
        - NTP1
      responses:
        '200':
          description: An object representing the tx to burn the token
          schema:
            $ref: '#/definitions/burnTokenResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'





definitions:
  getTokenIdResponse:
    type: object
    properties:
      tokenId:
        type: string
        description: Unique ID of the token
      tokenName:
        type: string
        description: String representing the token Symbol



  broadcastTxRequest:
    type: object
    required:
      - txHex
    properties:
      txHex:
        type: string
        description: Signed raw tx hex to broadcast



  broadcastTxResponse:
    type: object
    properties:
      txid:
        type: string
        description: Txid of successfully broadcasted transaction



  getAddressInfoResponse:
    type: object
    properties:
      address:
        type: string
        description: The Neblio Address
      utxos:
        type: array
        description: Array of UTXOs held at this address.
        items:
          type: object
          properties:
            index:
              type: number
              description: Index of the UTXO at this address
            txid:
              type: string
              description: Txid of this UTXO
            blockheight:
              type: number
              description: Blockheight of the UTXO
            blocktime:
              type: number
              description: Blocktime of the UTXO
            scriptPubKey:
              type: object
              description: Object representing the scruptPubKey of the UTXO
            used:
              type: boolean
              description: Whether the UTXO has been used
            value:
              type: number
              description: Value of the UTXO in NEBL satoshi
            tokens:
              type: array
              description: Array of NTP1 tokens in this UTXO.
              items:
                type: object
                properties:
                  tokenId:
                    type: string
                    description: Unique NTP1 identifier for this token
                  amount:
                    type: number
                    description: Number of Tokens
                  issueTxid:
                    type: string
                    description: TXID the token originally was issued in
                  divisibility:
                    type: number
                    description: Decimal places the token is divisible to
                  lockStatus:
                    type: boolean
                    description: 'Whether the token is locked, preventing more from being issued'
                  aggregationPolicy:
                    type: string
                    description: Whether the tokens can be aggregated together



  getTokenMetadataResponse:
    type: object
    properties:
      tokenId:
        type: string
        description: ID of the token
      divisibility:
        type: number
        description: Decimal places the token is divisible to
      lockStatus:
        type: boolean
        description: Whether issuance of more tokens is locked
      aggregationPolicy:
        type: string
        description: Whether the tokens are aggregatable
      totalSupply:
        type: number
        description: Total number of tokens in supply
      numOfHolders:
        type: number
        description: Total number of addresses this token is held at
      numOfTransfers:
        type: number
        description: Total number of transactions of this token
      numofIssuance:
        type: number
        description: Total number of times this token has been issued
      numOfBurns:
        type: number
        description: Number of times tokens have been burned
      firstBlock:
        type: number
        description: Block number token was issued in
      issuanceTxid:
        type: string
        description: TXID the token was issued with
      issueAddress:
        type: string
        description: Address that issued the tokens
      metadataOfIssuance:
        type: object
        description: Metadata set at issuance
        properties:
          data:
            type: object
            properties:
              tokenName:
                type: string
                description: Token symbol
              issuer:
                type: string
                description: Name of token issuer
              description:
                type: string
                description: Token description
              userData:
                type: object
                description: Metadata set by user on token
                properties:
                  meta:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
      metadataOfUtxo:
        type: object
        description: Metadata set at issuance
        properties:
          data:
            type: object
            properties:
              tokenName:
                type: string
                description: Token symbol
              issuer:
                type: string
                description: Name of token issuer
              description:
                type: string
                description: Token description
              userData:
                type: object
                description: Metadata set by user on token
                properties:
                  meta:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string



  getTokenHoldersResponse:
    type: object
    properties:
      tokenId:
        type: string
        description: TokenId of the token
      holders:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            amount:
              type: number
      divibility:
        type: number
        description: How many decimal points the token is divisble to
      lockStatus:
        type: boolean
        description: Whether new issuances of this token are locked
      aggregationPolicy:
        type: string
        description: Whether the tokesn are aggregatable
      someUtxo:
        type: string
        description: A UTXO of this token



  issueTokenRequest:
    type: object
    required:
      - issueAddress
      - amount
      - divisibility
      - fee
      - reissuable
    properties:
      issueAddress:
        type: string
        description: Address issuing the token
      amount:
        type: number
        description: Number of tokens to issue
      divisibility:
        type: number
        description: Number of decimal places the token should be divisble by (0-7)
      fee:
        type: number
        description: Fee in satoshi to include in the issuance transaction min 1000000000 (10 NEBL)
      reissuable:
        type: boolean
        description: whether the token should be reissuable
      metadata:
        type: object
        description: Object representing all metadata at token issuance
        properties:
          tokenName:
            type: string
            description: Token Symbol it will be identified by (ex. NIBBL)
          issuer:
            type: string
            description: Name of token issuer
          description:
            type: string
            description: Long name or description of token (ex. Nibble)
          urls:
            type: object
            properties:
              name:
                type: string
                description: Name of the URL
              url:
                type: string
                description: Actual URL
              mimeType:
                type: string
                description: mimeType of URL content
              dataHash:
                type: string
                description: Hash of data at the URL, used for verification
          userData:
            type: object
            description: Metadata set by user on token
            properties:
              meta:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
          encryptions:
            type: array
            description: Array of encryption instruction objects for encrypting userData
            items:
              type: object
              properties:
                key:
                  type: string
                  description: userData key to encrypt
                pubkey:
                  type: string
                  description: RSA public key used for encryption
                format:
                  type: string
                  description: key format (pem or der)
                type:
                  type: string
                  description: pkcs1 or pkcs8
          rules:
            type: object
            description: Object describing token rules
            properties:
              fees:
                type: object
                properties:
                  items:
                    type: array
                    description: Array of objects describing fee rules
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          description: Address fee is auto sent to
                        tokenId:
                          type: string
                          description: How fee should be paid, either with a tokenId, or with NEBL if null
                        value:
                          type: string
                          description: Amount of NTP1 token, or NEBL (in satoshi) to pay as fee
                  locked:
                    type: boolean
                    description: Whether this rule can be modified in future transactions
              holders:
                type: array
                description: Array of objects describing what addresses can hold the token
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: Address that can hold the token
                    locked:
                      type: boolean
                      description: Whether this rule can be modified in future transactions
              expiration:
                type: object
                description: Object describing expiration rules of the token
                properties:
                  validUntil:
                    type: number
                    description: Blockheight at wh
                  locked:
                    type: boolean
                    description: Whether this rule can be modified in future transactions



  issueTokenResponse:
    type: object
    properties:
      tokenId:
        type: string
        description: TokenId of the to be issued token
      txHex:
        type: string
        description: Unsigned, raw transaction hex of the transaction to issue the token



  sendTokenRequest:
    type: object
    required:
      - fee
      - to
    properties:
      fee:
        type: number
        description: Fee in satoshi to include in the issuance transaction min 10000 (0.0001 NEBL)
      from:
        type: array
        description: Array of addresses to send the token from
        items:
          type: string
      to:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              description: Address to transfer tokens to
            amount:
              type: number
              description: Number of tokens to send
            tokenId:
              type: string
              description: ID of token we are sending
      metadata:
        type: object
        description: Object representing all metadata at token issuance
        properties:
          tokenName:
            type: string
            description: Token Symbol it will be identified by (ex. NIBBL)
          issuer:
            type: string
            description: Name of token issuer
          description:
            type: string
            description: Long name or description of token (ex. Nibble)
          urls:
            type: object
            properties:
              name:
                type: string
                description: Name of the URL
              url:
                type: string
                description: Actual URL
              mimeType:
                type: string
                description: mimeType of URL content
              dataHash:
                type: string
                description: Hash of data at the URL, used for verification
          userData:
            type: object
            description: Metadata set by user on token
            properties:
              meta:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
          encryptions:
            type: array
            description: Array of encryption instruction objects for encrypting userData
            items:
              type: object
              properties:
                key:
                  type: string
                  description: userData key to encrypt
                pubkey:
                  type: string
                  description: RSA public key used for encryption
                format:
                  type: string
                  description: key format (pem or der)
                type:
                  type: string
                  description: pkcs1 or pkcs8
          rules:
            type: object
            description: Object describing token rules
            properties:
              fees:
                type: object
                properties:
                  items:
                    type: array
                    description: Array of objects describing fee rules
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          description: Address fee is auto sent to
                        tokenId:
                          type: string
                          description: How fee should be paid, either with a tokenId, or with NEBL if null
                        value:
                          type: string
                          description: Amount of NTP1 token, or NEBL (in satoshi) to pay as fee
                  locked:
                    type: boolean
                    description: Whether this rule can be modified in future transactions
              holders:
                type: array
                description: Array of objects describing what addresses can hold the token
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: Address that can hold the token
                    locked:
                      type: boolean
                      description: Whether this rule can be modified in future transactions
              expiration:
                type: object
                description: Object describing expiration rules of the token
                properties:
                  validUntil:
                    type: number
                    description: Blockheight at wh
                  locked:
                    type: boolean
                    description: Whether this rule can be modified in future transactions



  sendTokenResponse:
    type: object
    properties:
      txHex:
        type: string
        description: Unsigned, raw transaction hex of the transaction to send the token
      ntp1OutputIndexes:
        type: array
        description: Array of indexes transfering NTP1 tokens
        items:
          type: number
      multisigOutputs:
        type: array
        description: Array of indexes of multisig outputs
        items:
          type: number



  burnTokenRequest:
    type: object
    required:
      - fee
      - burn
    properties:
      fee:
        type: number
        description: Fee in satoshi to include in the issuance transaction min 10000 (0.0001 NEBL)
      from:
        type: array
        description: Array of addresses to send the token from
        items:
          type: string
      transfer:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              description: Address to transfer tokens to
            amount:
              type: number
              description: Number of tokens to send
            tokenId:
              type: string
              description: ID of token we are sending
      burn:
        type: array
        description: Array of objects representing tokens to be burned
        items:
          type: object
          properties:
            amount:
              type: number
              description: Amount of tokens to burn
            tokenId:
              type: string
              description: Unique token id we are burning



  burnTokenResponse:
    type: object
    properties:
      txHex:
        type: string
        description: Unsigned, raw transaction hex of the transaction to burn the token
      ntp1OutputIndexes:
        type: array
        description: Array of indexes transfering NTP1 tokens
        items:
          type: number
      multisigOutputs:
        type: array
        description: Array of indexes of multisig outputs
        items:
          type: number



  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
